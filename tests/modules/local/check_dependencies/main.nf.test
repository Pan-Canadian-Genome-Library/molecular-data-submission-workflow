nextflow_process{
    name "Test module CHECK_DEPENDENCIES"
    script "modules/local/check_dependencies/main.nf"
    process "CHECK_DEPENDENCIES"
    
    tag "modules"
    tag "modules_local"
    tag "modules/check_dependencies"

    test("check dependencies happy path - success") {

        when {
            process {
                """
                params.clinical_url = "https://submission.pcgl-dev.cumulus.genomeinformatics.org"
                params.file_manager_url = "https://file-manager.pcgl-dev.cumulus.genomeinformatics.org"
                // Test input with molecular metadata files (all TSV format)
                input[0] = "EXAMPLE-CA"
                input[1] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Files.tsv')]
                input[2] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Analysis.tsv')]
                input[3] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Workflow.tsv')]
                input[4] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Read_Group.tsv')]
                input[5] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Experiment.tsv')]
                input[6] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Specimen.tsv')]
                input[7] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Sample.tsv')]
                input[8] = ['${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path']
                """
            }
        }

        then {
            assertAll(
                { assert process.out.relational_mapping},
                { assert process.out.analysis_types},
                { assert process.out.versions}
            )
        }
    }

    test("check dependencies bad path - fail") {

        when {
            process {
                """
                params.clinical_url = "https://submission.pcgl-dev.cumulus.genomeinformatics.org"
                params.file_manager_url = "https://file-manager.pcgl-dev.cumulus.genomeinformatics.org"
                // Test input with molecular metadata files (all TSV format)
                input[0] = "GARGAMEL"
                input[1] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/bad_path/Files.tsv')]
                input[2] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/bad_path/Analysis.tsv')]
                input[3] = []
                input[4] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/bad_path/Read_Group.tsv')]
                input[5] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/bad_path/Experiment.tsv')]
                input[6] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/bad_path/Specimen.tsv')]
                input[7] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/bad_path/Sample.tsv')]
                input[8] = ['${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path']
                """
            }
        }

        then {
            assertAll(
                { assert process.out.relational_mapping},
                { assert process.out.analysis_types},
                { assert process.out.versions}
            )
        }
    }

    test("check dependencies happy path stub") {
        options "-stub-run"
        when {
            process {
                """
                params.clinical_url = "https://submission.pcgl-dev.cumulus.genomeinformatics.org"
                params.file_manager_url = "https://file-manager.pcgl-dev.cumulus.genomeinformatics.org"
                // Test input with molecular metadata files (all TSV format)
                input[0] = "EXAMPLE-CA"
                input[1] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Files.tsv')]
                input[2] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Analysis.tsv')]
                input[3] = []
                input[4] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Read_Group.tsv')]
                input[5] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Experiment.tsv')]
                input[6] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Specimen.tsv')]
                input[7] = [file('${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path/Sample.tsv')]
                input[8] = ['${projectDir}/tests/modules/local/check_dependencies/test_data/happy_path']
                """
            }
        }

        then {
            assertAll(
                { assert process.out.relational_mapping},
                { assert process.out.analysis_types},
                { assert process.out.versions}
            )
        }
    }
}