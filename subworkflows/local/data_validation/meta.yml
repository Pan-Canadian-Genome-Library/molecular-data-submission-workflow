name: "data_validation"
description: Comprehensive data validation subworkflow orchestrating metadata validation, MD5 crosscheck validation, and file integrity validation in sequential order
keywords:
  - validation
  - file integrity
  - metadata validation
  - md5 checksum
  - crosscheck
  - genomics
  - quality control
  - biospecimen
components:
  - file_integrity
  - validation/metadata
  - validation/crosscheck
input:
  - ch_payload_files_biospecimen:
      type: channel
      description: |
        Channel containing payload files with biospecimen data from molecular_payload_generation
        Structure: [ val(meta), payload(json), [files], specimen(path), sample(path), experiment(path), read_group(path) ]
        - meta: Map containing analysis metadata (id, type, study, status)
        - payload: JSON payload file with analysis metadata  
        - files: List of genomic files for validation
        - specimen: TSV file with specimen metadata
        - sample: TSV file with sample metadata
        - experiment: TSV file with experiment metadata
        - read_group: TSV file with read group metadata
output:
  - validated_payload_files:
      type: channel
      description: |
        Channel containing validated payload files with final validation status
        Structure: [ val(meta), payload(json), [files] ]
        - meta: Updated map with final validation status (status: 'pass' or 'failed')
        - payload: Original JSON payload file
        - files: List of validated genomic files
      pattern: "*.{bam,cram,vcf,vcf.gz,bcf,fastq,fq,fastq.gz,fq.gz}"
  - status:
      type: channel
      description: |
        Channel containing all validation status files from metadata, crosscheck, and file integrity steps
        Structure: [ val(meta), *_status.yml ]
        - Includes status files from VALIDATION_METADATA, VALIDATION_CROSSCHECK, and FILE_INTEGRITY
      pattern: "*_status.yml"
  - versions:
      type: channel
      description: |
        Channel containing software versions from all validation modules
        Structure: [ versions.yml ]
      pattern: "versions.yml"
authors:
  - "@lindaxiang"
maintainers:
  - "@lindaxiang"
