/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Pan-Canadian-Genome-Library/molecular-data-submission-workflow Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    file_metadata                = null
    analysis_metadata            = null
    workflow_metadata            = null
    read_group_metadata          = null
    experiment_metadata          = null
    specimen_metadata            = null
    sample_metadata              = null
    skip_duplicate_check         = false
    skip_upload                  = false
    exit_on_error                = false
    token                        = null
    study_id                     = null
    file_manager_url             = null
    file_transfer_url            = null
    clinical_url                 = null
    
    // Container images - Docker containers work with both Docker and Singularity
    // Singularity automatically converts Docker images, no separate images needed
    file_manager_container       = "ghcr.io/overture-stack/song-client"
    file_manager_container_tag   = "822055be"
    file_transfer_container      = "ghcr.io/pan-canadian-genome-library/file-transfer"
    file_transfer_container_tag  = "edge"
    file_transfer_transport_parallel = null
    file_transfer_transport_mem  = null
    allow_duplicates             = false
    debug_channels               = false
    path_to_files_directory      = null

    

    // Boilerplate options
    outdir                       = "out"
    publish_dir_mode             = 'copy'
    monochrome_logs              = false
    
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    config_profile_name        = null
    config_profile_description = null

    // custom_config_version      = 'master'
    // custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    // config_profile_contact     = null
    // config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        docker.registry         = 'quay.io'
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u \$(id -u):\$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        singularity.engineOptions = '--cleanenv --containall'
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    
    test               { includeConfig 'conf/test.config'               }
    test_full          { includeConfig 'conf/test_full.config'          }
    test_singularity   { includeConfig 'conf/test_singularity.config'   }
    sd4h_dev           { includeConfig 'conf/envs/sd4h_dev.config'      }
    sd4h_qa            { includeConfig 'conf/envs/sd4h_qa.config'       }
    sd4h_prod          { includeConfig 'conf/envs/sd4h_prod.config'     }
    cumulus_dev        { includeConfig 'conf/envs/cumulus_dev.config'   }
    cumulus_qa         { includeConfig 'conf/envs/cumulus_qa.config'    }
}

// Load nf-core custom profiles from different Institutions
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load Pan-Canadian-Genome-Library/molecular-data-submission-workflow custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/molecular-data-submission-workflow.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         
    "pipefail"    // Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

// Enable locally defined binary scripts for modules
nextflow.enable.moduleBinaries = true

manifest {
    name            = 'Pan-Canadian-Genome-Library/molecular-data-submission-workflow'
    author          = """edsu7,lxiang"""
    homePage        = 'https://github.com/Pan-Canadian-Genome-Library/molecular-data-submission-workflow'
    description     = """The PCGL workflow for submitting molecular data """
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.04.2'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

//