/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for sequential performance testing
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Sequential execution configuration to establish baseline performance metrics
    Forces all processes to run one at a time to eliminate resource contention
----------------------------------------------------------------------------------------
*/

process {
    resourceLimits = [
        cpus: 12,
        memory: '8.GB',
        time: '2.h'
    ]
}

params {
    // Allow resubmission of same test files for performance testing
    allow_duplicates = true
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = false
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = false
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    overwrite = true
    raw = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
    fields  = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt'
}
dag {
    enabled = false
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}


// Note: All other configurations (resource allocations, reporting, etc.) inherited from base.config and modules.config